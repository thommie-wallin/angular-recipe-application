{"ast":null,"code":"import { Breakpoints } from '@angular/cdk/layout';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"../../core/services/favourites.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/material/grid-list\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/button\";\nfunction RecipeListComponent_mat_grid_tile_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 2)(1, \"mat-card\", 3)(2, \"a\", 4)(3, \"mat-card-header\")(4, \"mat-card-title\", 5);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(6, \"img\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-card-actions\")(8, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function RecipeListComponent_mat_grid_tile_1_Template_button_click_8_listener() {\n      const recipe_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.addToFavourites(recipe_r2));\n    });\n    i0.ɵɵelementStart(9, \"mat-icon\");\n    i0.ɵɵtext(10, \"favorite\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const recipe_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"colspan\", 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/recipe/\", recipe_r2.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"title\", recipe_r2.title);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", recipe_r2.title, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵpropertyInterpolate(\"src\", recipe_r2.image, i0.ɵɵsanitizeUrl);\n  }\n}\nexport let RecipeListComponent = /*#__PURE__*/(() => {\n  class RecipeListComponent {\n    constructor(breakpointObserver, favouritesService, _snackBar) {\n      this.breakpointObserver = breakpointObserver;\n      this.favouritesService = favouritesService;\n      this._snackBar = _snackBar;\n      this.gridByBreakpoint = {\n        xl: 5,\n        lg: 4,\n        md: 3,\n        sm: 2,\n        xs: 1\n      };\n    }\n    ngOnInit() {\n      // Angular Material Component Dev Kit (CDK): Layout behaviour primitives with Material Designs breakpoint system. \n      // The breakpointobserver utility with the observe method evaluate default media queries from the breakpoint system \n      // which will emit when one of them changes its boolean value. If a media query emits a boolean value of true, the different\n      // if statements check which media querys condition is truthy. Then the cols variable is set to a corresponding number \n      // value from the gridByBreakpoint object.\n      this.breakpointObserver.observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge]).subscribe(result => {\n        if (result.matches) {\n          if (result.breakpoints[Breakpoints.XSmall]) {\n            this.cols = this.gridByBreakpoint.xs;\n          }\n          if (result.breakpoints[Breakpoints.Small]) {\n            this.cols = this.gridByBreakpoint.sm;\n          }\n          if (result.breakpoints[Breakpoints.Medium]) {\n            this.cols = this.gridByBreakpoint.md;\n          }\n          if (result.breakpoints[Breakpoints.Large]) {\n            this.cols = this.gridByBreakpoint.lg;\n          }\n          if (result.breakpoints[Breakpoints.XLarge]) {\n            this.cols = this.gridByBreakpoint.xl;\n          }\n        }\n      });\n    }\n    addToFavourites(recipe) {\n      this.favouritesService.addToFavourites(recipe);\n      this._snackBar.open('Recipe added to favourites.', 'OK', {\n        duration: 3000\n      });\n    }\n    static #_ = this.ɵfac = function RecipeListComponent_Factory(t) {\n      return new (t || RecipeListComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver), i0.ɵɵdirectiveInject(i2.FavouritesService), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RecipeListComponent,\n      selectors: [[\"app-recipe-list\"]],\n      inputs: {\n        recipes: \"recipes\"\n      },\n      decls: 3,\n      vars: 4,\n      consts: [[3, \"cols\"], [3, \"colspan\", 4, \"ngFor\", \"ngForOf\"], [3, \"colspan\"], [\"appearance\", \"outlined\", 1, \"dashboard-card\"], [3, \"routerLink\"], [3, \"title\"], [\"mat-card-image\", \"\", 3, \"src\"], [\"mat-mini-fab\", \"\", \"aria-label\", \"add to favourites\", 1, \"more-button\", 3, \"click\"]],\n      template: function RecipeListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-grid-list\", 0);\n          i0.ɵɵtemplate(1, RecipeListComponent_mat_grid_tile_1_Template, 11, 6, \"mat-grid-tile\", 1);\n          i0.ɵɵpipe(2, \"async\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          i0.ɵɵproperty(\"cols\", ctx.cols);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", (tmp_1_0 = i0.ɵɵpipeBind1(2, 2, ctx.recipes)) == null ? null : tmp_1_0.results);\n        }\n      },\n      dependencies: [i4.NgForOf, i5.RouterLink, i6.MatGridList, i6.MatGridTile, i7.MatCard, i7.MatCardActions, i7.MatCardHeader, i7.MatCardImage, i7.MatCardTitle, i8.MatIcon, i9.MatMiniFabButton, i4.AsyncPipe],\n      styles: [\".dashboard-card[_ngcontent-%COMP%]{position:absolute;inset:15px}.dashboard-card[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{text-decoration:none}.more-button[_ngcontent-%COMP%]{position:absolute;bottom:10px;right:10px}mat-card-header[_ngcontent-%COMP%]{width:90%;white-space:nowrap;overflow:hidden}\"]\n    });\n  }\n  return RecipeListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}