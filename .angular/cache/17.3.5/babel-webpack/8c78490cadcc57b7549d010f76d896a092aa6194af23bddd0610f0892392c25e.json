{"ast":null,"code":"import { Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/toolbar\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/sidenav\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/list\";\nfunction NavComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function NavComponent_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      i0.ɵɵnextContext();\n      const drawer_r2 = i0.ɵɵreference(2);\n      return i0.ɵɵresetView(drawer_r2.toggle());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\", 9);\n    i0.ɵɵtext(2, \"menu\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let NavComponent = /*#__PURE__*/(() => {\n  class NavComponent {\n    constructor(breakpointObserver) {\n      this.breakpointObserver = breakpointObserver;\n      this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(result => result.matches), shareReplay());\n    }\n    static #_ = this.ɵfac = function NavComponent_Factory(t) {\n      return new (t || NavComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NavComponent,\n      selectors: [[\"app-nav\"]],\n      decls: 22,\n      vars: 12,\n      consts: [[\"drawer\", \"\"], [1, \"sidenav-container\"], [\"fixedInViewport\", \"\", 1, \"sidenav\", 3, \"mode\", \"opened\"], [\"mat-list-item\", \"\", \"routerLink\", \"/home\"], [\"mat-list-item\", \"\", \"routerLink\", \"/recipes\"], [\"mat-list-item\", \"\", \"routerLink\", \"/favourites\"], [\"color\", \"primary\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 3, \"click\"], [\"aria-label\", \"Side nav toggle icon\"]],\n      template: function NavComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-sidenav-container\", 1)(1, \"mat-sidenav\", 2, 0);\n          i0.ɵɵpipe(3, \"async\");\n          i0.ɵɵpipe(4, \"async\");\n          i0.ɵɵpipe(5, \"async\");\n          i0.ɵɵelementStart(6, \"mat-toolbar\");\n          i0.ɵɵtext(7, \"Menu\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"mat-nav-list\")(9, \"a\", 3);\n          i0.ɵɵtext(10, \"Home\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"a\", 4);\n          i0.ɵɵtext(12, \"Recipes\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"a\", 5);\n          i0.ɵɵtext(14, \"Favourites\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(15, \"mat-sidenav-content\")(16, \"mat-toolbar\", 6);\n          i0.ɵɵtemplate(17, NavComponent_button_17_Template, 3, 0, \"button\", 7);\n          i0.ɵɵpipe(18, \"async\");\n          i0.ɵɵelementStart(19, \"span\");\n          i0.ɵɵtext(20, \"u07-recipe-app-thommie-wallin\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(21, \"router-outlet\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"mode\", i0.ɵɵpipeBind1(3, 4, ctx.isHandset$) ? \"over\" : \"side\")(\"opened\", i0.ɵɵpipeBind1(4, 6, ctx.isHandset$) === false);\n          i0.ɵɵattribute(\"role\", i0.ɵɵpipeBind1(5, 8, ctx.isHandset$) ? \"dialog\" : \"navigation\");\n          i0.ɵɵadvance(16);\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(18, 10, ctx.isHandset$));\n        }\n      },\n      dependencies: [i2.NgIf, i3.RouterOutlet, i3.RouterLink, i4.MatToolbar, i5.MatIconButton, i6.MatSidenav, i6.MatSidenavContainer, i6.MatSidenavContent, i7.MatIcon, i8.MatNavList, i8.MatListItem, i2.AsyncPipe],\n      styles: [\".sidenav-container[_ngcontent-%COMP%]{height:100%}.sidenav[_ngcontent-%COMP%]{width:200px}.sidenav[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]{background:inherit}.mat-toolbar.mat-primary[_ngcontent-%COMP%]{position:sticky;top:0;z-index:1}\"]\n    });\n  }\n  return NavComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}