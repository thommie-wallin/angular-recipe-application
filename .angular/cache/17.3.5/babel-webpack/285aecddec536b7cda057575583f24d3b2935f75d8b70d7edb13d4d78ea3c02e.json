{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/grid-list\";\nimport * as i4 from \"@angular/material/card\";\nfunction HomeComponent_mat_grid_tile_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 4)(1, \"mat-card\", 5)(2, \"mat-card-header\")(3, \"mat-card-title\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(5, \"img\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const card_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"colspan\", card_r1.cols)(\"rowspan\", card_r1.rows);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", card_r1.title, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵpropertyInterpolate(\"src\", card_r1.image, i0.ɵɵsanitizeUrl);\n  }\n}\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor(breakpointObserver) {\n      this.breakpointObserver = breakpointObserver;\n      /** Based on the screen size, switch from standard to one column per row */\n      this.cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(({\n        matches\n      }) => {\n        if (matches) {\n          return [{\n            title: `Search for recipes`,\n            cols: 2,\n            rows: 1,\n            image: '../../assets/images/fish.jpg'\n          }, {\n            title: 'Save your favourites',\n            cols: 2,\n            rows: 1,\n            image: '../../assets/images/pancake.jpg'\n          }, {\n            title: 'Inspiration',\n            cols: 2,\n            rows: 1,\n            image: '../../assets/images/lemon.jpg'\n          }];\n        }\n        return [{\n          title: `Search for recipes`,\n          cols: 2,\n          rows: 1,\n          image: '../../assets/images/fish.jpg'\n        }, {\n          title: 'Save your favourites',\n          cols: 1,\n          rows: 1,\n          image: '../../assets/images/pancake.jpg'\n        }, {\n          title: 'Inspiration',\n          cols: 1,\n          rows: 1,\n          image: '../../assets/images/lemon.jpg'\n        }];\n      }));\n    }\n    static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n      return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: HomeComponent,\n      selectors: [[\"app-home\"]],\n      decls: 6,\n      vars: 3,\n      consts: [[1, \"grid-container\"], [1, \"mat-h1\"], [\"cols\", \"2\", \"rowHeight\", \"350px\"], [3, \"colspan\", \"rowspan\", 4, \"ngFor\", \"ngForOf\"], [3, \"colspan\", \"rowspan\"], [\"appearance\", \"outlined\", 1, \"dashboard-card\"], [\"mat-card-image\", \"\", 3, \"src\"]],\n      template: function HomeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n          i0.ɵɵtext(2, \"Home\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"mat-grid-list\", 2);\n          i0.ɵɵtemplate(4, HomeComponent_mat_grid_tile_4_Template, 6, 4, \"mat-grid-tile\", 3);\n          i0.ɵɵpipe(5, \"async\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 1, ctx.cards));\n        }\n      },\n      dependencies: [i2.NgForOf, i3.MatGridList, i3.MatGridTile, i4.MatCard, i4.MatCardHeader, i4.MatCardImage, i4.MatCardTitle, i2.AsyncPipe],\n      styles: [\".grid-container[_ngcontent-%COMP%]{margin:20px}.dashboard-card[_ngcontent-%COMP%]{position:absolute;inset:15px;overflow:hidden}.more-button[_ngcontent-%COMP%]{position:absolute;top:5px;right:10px}.dashboard-card-content[_ngcontent-%COMP%]{text-align:center}mat-card[_ngcontent-%COMP%] > img[_ngcontent-%COMP%]{object-fit:cover;height:100%}\"]\n    });\n  }\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}